[build-system]
requires = [
    "setuptools >= 40.0",
]
build-backend = "setuptools.build_meta"



[tool.ruff]
target-version = "py38"
# Enable Pyflakes `E` and `F` codes by default.
lint.select = [
    "E",
    "W", # see: https://pypi.org/project/pycodestyle
    "F", # see: https://pypi.org/project/pyflakes
    "I", #see: https://pypi.org/project/isort/
    "S", # see: https://pypi.org/project/flake8-bandit
#    "D", # see: https://pypi.org/project/pydocstyle
#    "N", # see: https://pypi.org/project/pep8-naming
]
#lint.extend-select = [
#    "A",    # see: https://pypi.org/project/flake8-builtins
#    "B",    # see: https://pypi.org/project/flake8-bugbear
#    "C4",   # see: https://pypi.org/project/flake8-comprehensions
#    "PT",   # see: https://pypi.org/project/flake8-pytest-style
#    "RET",  # see: https://pypi.org/project/flake8-return
#    "ANN",  # see: https://pypi.org/project/flake8-annotations
#]
#lint.ignore = [
#    "E731",   # Do not assign a lambda expression, use a def
#]
lint.ignore-init-module-imports = true
lint.unfixable = ["F401"]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101", "S311"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"

#[tool.ruff.pycodestyle]
#ignore-overlong-task-comments = true

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
